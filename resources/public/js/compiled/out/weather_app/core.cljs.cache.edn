;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name weather-app.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, ajax.core ajax.core}, :uses {POST ajax.core, atom reagent.core, GET ajax.core}, :defs {model {:name weather-app.core/model, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 17, :column 1, :end-line 17, :end-column 15, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 17, :column 10, :end-line 17, :end-column 15}}, log {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 29, :column 7, :end-line 29, :end-column 10, :arglists (quote ([& params])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name weather-app.core/log, :variadic true, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists ([& params])}, fetch-weather {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([query]))}, :name weather-app.core/fetch-weather, :variadic false, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 20, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, weather-component {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 51, :column 7, :end-line 51, :end-column 24, :arglists (quote ([city temp country]))}, :name weather-app.core/weather-component, :variadic false, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 24, :method-params ([city temp country]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists (quote ([city temp country]))}, choose-city-component {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 59, :column 7, :end-line 59, :end-column 28, :arglists (quote ([]))}, :name weather-app.core/choose-city-component, :variadic false, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-component {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 80, :column 7, :end-line 80, :end-column 21, :arglists (quote ([]))}, :name weather-app.core/main-component, :variadic false, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :line 104, :column 7, :end-line 104, :end-column 19, :arglists (quote ([]))}, :name weather-app.core/on-js-reload, :variadic false, :file "/Users/valic/Documents/Work/weather-app/src/weather_app/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:h3#contry :temp :div#weather :h3#temp :value :city :h2#app-title :div#main :type :on-click :div :h2#city :weather :input :on-change :handler :country :text}, :order [:text :weather :city :country :temp :handler :div#weather :h2#city :h3#temp :h3#contry :div :input :type :value :on-change :on-click :div#main :h2#app-title]}, :doc nil}