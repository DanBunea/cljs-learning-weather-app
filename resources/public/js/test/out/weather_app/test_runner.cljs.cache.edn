;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name weather-app.test-runner, :imports nil, :requires {test cljs.test, cljs.test cljs.test, weather-app.core-test weather-app.core-test, fw figwheel.client, figwheel.client figwheel.client}, :uses {report cljs.test}, :defs {color-favicon-data-url {:protocol-inline nil, :meta {:file "/Users/razvan/Documents/Workdesk/clj/project1/cljs-learning-weather-app/test/weather_app/test_runner.cljs", :line 10, :column 7, :end-line 10, :end-column 29, :arglists (quote ([color]))}, :name weather-app.test-runner/color-favicon-data-url, :variadic false, :file "test/weather_app/test_runner.cljs", :end-column 29, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, change-favicon-to-color {:protocol-inline nil, :meta {:file "/Users/razvan/Documents/Workdesk/clj/project1/cljs-learning-weather-app/test/weather_app/test_runner.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([color]))}, :name weather-app.test-runner/change-favicon-to-color, :variadic false, :file "test/weather_app/test_runner.cljs", :end-column 30, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, runner {:protocol-inline nil, :meta {:file "/Users/razvan/Documents/Workdesk/clj/project1/cljs-learning-weather-app/test/weather_app/test_runner.cljs", :line 31, :column 7, :end-line 31, :end-column 13, :arglists (quote ([]))}, :name weather-app.test-runner/runner, :variadic false, :file "test/weather_app/test_runner.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {test cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:report-counters :on-jsload :ns :name :file :end-column weather-app.core-test :type :column :summary :build-id :fail :line weather-app.core-test/center-test :end-run-tests :cljs.test/default :websocket-url :end-line :begin-test-ns :error center-test :pass :arglists :doc :end-test-ns :test}, :order [:cljs.test/default :summary :test :pass :fail :error :type :ns weather-app.core-test :begin-test-ns weather-app.core-test/center-test :name :file :end-column :column :line :end-line :arglists :doc center-test :end-test-ns :report-counters :end-run-tests :websocket-url :build-id :on-jsload]}, :doc nil}